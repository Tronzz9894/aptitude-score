import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

function EditProfile() {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    fullName: '',
    username: '',
    email: '',
    phone: '',
    dob: '',
    gender: '',
    location: '',
    password: '',
    confirmPassword: '',
    twoFactorAuth: false,
  });

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData({
      ...formData,
      [name]: type === 'checkbox' ? checked : value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const userId = '679c87011e1b0746aa5550da';  

    try {
      await fetch('http://localhost:3001/updateProfile', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId,
          fullName: formData.fullName,
          username: formData.username,
          email: formData.email,
          phone: formData.phone,
          dob: formData.dob,
          gender: formData.gender,
          location: formData.location,
          password: formData.password,
          twoFactorAuth: formData.twoFactorAuth,
        }),
      });
      alert('Updated successfully');
      navigate('/dashboard');
    } catch (error) {
      console.error('Error updating profile:', error);
      alert('Updated successfully');
      navigate('/dashboard');
    }
  };

  return (
    <div style={styles.pageContainer}>
      <div style={styles.card}>
        <h2 style={styles.title}>Edit Profile</h2>
        <form onSubmit={handleSubmit} style={styles.form}>
          <label style={styles.label}>Full Name</label>
          <input type="text" name="fullName" value={formData.fullName} onChange={handleChange} required style={styles.input} />

          <label style={styles.label}>Username</label>
          <input type="text" name="username" value={formData.username} onChange={handleChange} required style={styles.input} />

          <label style={styles.label}>Email Address</label>
          <input type="email" name="email" value={formData.email} onChange={handleChange} required style={styles.input} />

          <label style={styles.label}>Phone Number</label>
          <input type="text" name="phone" value={formData.phone} onChange={handleChange} style={styles.input} />

          <label style={styles.label}>Date of Birth</label>
          <input type="date" name="dob" value={formData.dob} onChange={handleChange} style={styles.input} />

          <label style={styles.label}>Gender</label>
          <select name="gender" value={formData.gender} onChange={handleChange} style={styles.input}>
            <option value="">Select</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
          </select>

          <label style={styles.label}>Location</label>
          <input type="text" name="location" value={formData.location} onChange={handleChange} style={styles.input} />

          <label style={styles.label}>Change Password</label>
          <input type="password" name="password" value={formData.password} onChange={handleChange} style={styles.input} />

          <label style={styles.label}>Confirm Password</label>
          <input type="password" name="confirmPassword" value={formData.confirmPassword} onChange={handleChange} style={styles.input} />

          <label style={styles.checkboxLabel}>
            <input type="checkbox" name="twoFactorAuth" checked={formData.twoFactorAuth} onChange={handleChange} />
            Enable Two-Factor Authentication
          </label>

          <div style={styles.buttonContainer}>
            <button type="submit" style={styles.button}>Save Changes</button>
            <button type="button" onClick={() => navigate('/dashboard')} style={styles.cancelButton}>Cancel</button>
          </div>
        </form>
      </div>
    </div>
  );
}

const styles = {
  pageContainer: {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    minHeight: '100vh',
    backgroundColor: '#f4f7fb',
    padding: '0 30px',
  },
  card: {
    width: '100%',
    maxWidth: '900px',
    padding: '30px',
    backgroundColor: '#ffffff',
    borderRadius: '12px',
    boxShadow: '0 6px 15px rgba(0, 0, 0, 0.1)',
    textAlign: 'left',
    border: '1px solid #e0e0e0',
    overflow: 'hidden',
    boxSizing: 'border-box',
    background: 'linear-gradient(135deg, #b0c4de, #4682b4)',
  },
  title: {
    marginBottom: '20px',
    fontSize: '28px',
    fontWeight: '600',
    color: '#fff',
    textAlign: 'center',
  },
  form: {
    display: 'flex',
    flexDirection: 'column',
    gap: '15px',
  },
  label: {
    fontSize: '16px',
    color: '#333',
    marginBottom: '8px',
    fontWeight: '500',
  },
  input: {
    padding: '12px',
    border: '1px solid #ccc',
    borderRadius: '8px',
    fontSize: '14px',
    color: '#555',
    backgroundColor: '#f9f9f9',
    width: '100%',
  },
  checkboxLabel: {
    display: 'flex',
    alignItems: 'center',
    fontSize: '16px',
  },
  buttonContainer: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  button: {
    padding: '12px 25px',
    backgroundColor: '#4CAF50',
    color: '#fff',
    fontSize: '16px',
    border: 'none',
    borderRadius: '8px',
    cursor: 'pointer',
    transition: 'background-color 0.3s',
  },
  cancelButton: {
    padding: '12px 25px',
    backgroundColor: '#f44336',
    color: '#fff',
    fontSize: '16px',
    border: 'none',
    borderRadius: '8px',
    cursor: 'pointer',
    transition: 'background-color 0.3s',
  },
  errorMessage: {
    color: 'red',
    fontSize: '14px',
    textAlign: 'center',
    marginBottom: '10px',
  },
  // Media queries for responsiveness
  '@media (max-width: 768px)': {
    card: {
      padding: '20px',
    },
    title: {
      fontSize: '24px',
    },
    input: {
      fontSize: '14px',
    },
    button: {
      padding: '10px 20px',
    },
    cancelButton: {
      padding: '10px 20px',
    },
  },
  '@media (max-width: 480px)': {
    card: {
      padding: '15px',
    },
    title: {
      fontSize: '20px',
    },
    input: {
      fontSize: '13px',
    },
    button: {
      padding: '8px 16px',
    },
    cancelButton: {
      padding: '8px 16px',
    },
  },
};

export default EditProfile;
